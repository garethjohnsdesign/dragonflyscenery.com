// Foundation for Sites by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

////
/// @group forms
////

/// Color of labels prefixed to an input.
/// @type Color
$input-prefix-color: $black !default;

/// Background color of labels prefixed to an input.
/// @type Color
$input-prefix-background: $light-gray !default;

/// Border around labels prefixed to an input.
/// @type Border
$input-prefix-border: 1px solid $medium-gray !default;

/// Left/right padding of an pre/postfixed input label
$input-prefix-padding: 1rem !default;

@mixin foundation-form-prepostfix {
  $height: ($input-font-size + $form-spacing * 1.5);

  .input-group {
    display: if($global-flexbox, flex, table);
    width: 100%;
    margin-bottom: $form-spacing;

    @if $global-flexbox {
      align-items: stretch;
    }

    > :first-child {
<<<<<<< HEAD
      border-radius: if($global-text-direction == rtl, 0 $input-radius $input-radius 0, $input-radius 0 0 $input-radius);
=======
      border-radius: if($global-text-direction == rtl, 0 $global-radius $global-radius 0, $global-radius 0 0 $global-radius);
>>>>>>> origin/master
    }

    > :last-child {
      > * {
<<<<<<< HEAD
        border-radius: if($global-text-direction == rtl, $input-radius 0 0 $input-radius, 0 $input-radius $input-radius 0);
=======
        border-radius: if($global-text-direction == rtl, $global-radius 0 0 $global-radius, 0 $global-radius $global-radius 0);
>>>>>>> origin/master
      }
    }
  }

  %input-group-child {
    margin: 0;
    white-space: nowrap;

    @if not $global-flexbox {
      display: table-cell;
      vertical-align: middle;
    }
  }

  .input-group-label {
    @extend %input-group-child;
<<<<<<< HEAD
    padding: 0 $input-prefix-padding;
    border: $input-prefix-border;
    background: $input-prefix-background;

    color: $input-prefix-color;
    text-align: center;
    white-space: nowrap;

    @if $global-flexbox {
      display: flex;
      flex: 0 0 auto;
=======
    text-align: center;
    padding: 0 $input-prefix-padding;
    background: $input-prefix-background;
    color: $input-prefix-color;
    border: $input-prefix-border;
    white-space: nowrap;

    @if $global-flexbox {
      flex: 0 0 auto;
      display: flex;
>>>>>>> origin/master
      align-items: center;
    }
    @else {
      width: 1%;
      height: 100%;
    }

    @if has-value($input-prefix-border) {
      &:first-child {
        border-#{$global-right}: 0;
      }

      &:last-child {
        border-#{$global-left}: 0;
      }
    }
  }

  .input-group-field {
    @extend %input-group-child;
    border-radius: 0;

<<<<<<< HEAD
    @if $global-flexbox {
      flex: 1 1 0px; // sass-lint:disable-line zero-unit
      height: auto;
      min-width: 0;
=======
    // scss-lint:disable ZeroUnit
    @if $global-flexbox {
      flex: 1 1 0px;
      height: auto;
>>>>>>> origin/master
    }
    @else {
      height: $height;
    }
  }

  .input-group-button {
    @extend %input-group-child;
    padding-top: 0;
    padding-bottom: 0;
    text-align: center;

    @if $global-flexbox {
      flex: 0 0 auto;
    }
    @else {
<<<<<<< HEAD
      width: 1%;
      height: 100%;
=======
      height: 100%;
      width: 1%;
>>>>>>> origin/master
    }

    a,
    input,
<<<<<<< HEAD
    button,
    label {
      @extend %input-group-child;
      height: $height;
      padding-top: 0;
      padding-bottom: 0;

      font-size: $input-font-size;
=======
    button {
      margin: 0;
>>>>>>> origin/master
    }
  }

  // Specificity bump needed to prevent override by buttons
<<<<<<< HEAD
=======
  // scss-lint:disable QualifyingSelector
>>>>>>> origin/master
  @if not $global-flexbox {
      .input-group .input-group-button {
          display: table-cell;
      }
  }
}
